<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Dobocan_Vlad_Lab6"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Dobocan_Vlad_Lab6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},
 Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="317" Margin="66,36,0,0" VerticalAlignment="Top" Width="655">
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}">
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="342,10,9.6,175.8" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="348,147,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2.104"/>
                            <ColumnDefinition Width="74.696"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="1" HorizontalAlignment="Left" Margin="0.896,3,0,3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="custIdTextBox" IsEnabled="False" Grid.Column="2" HorizontalAlignment="Left" Height="24" Margin="3.2,4,0,4" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="First Name:" Grid.Column="1" HorizontalAlignment="Left" Margin="0.896,3,0,3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="24" Margin="3.2,4,0,4" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" 
                                 Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}" />
                        <Label Content="Last Name:" Grid.Column="1" HorizontalAlignment="Left" Margin="0.896,3,0,3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="24" Margin="3.2,4,0,4" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"
                                 Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left" Margin="48,13,0,0" VerticalAlignment="Top" Width="75" Click="btnNew_Click"/>
                    <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left" Margin="48,52,0,0" VerticalAlignment="Top" Width="75" Click="btnEdit_Click"/>
                    <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" Margin="48,94,0,0" VerticalAlignment="Top" Width="75" Click="btnDelete_Click"/>
                    <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Margin="48,208,0,0" VerticalAlignment="Top" Width="75" Click="btnSave_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />

                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" Margin="48,245,0,0" VerticalAlignment="Top" Width="75" Click="btnCancel_Click"/>
                    <Button x:Name="btnPrevious" Content="Previous" HorizontalAlignment="Left" Margin="348,118,0,0" VerticalAlignment="Top" Width="75" Click="btnPrevious_Click"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" Margin="565,118,0,0" VerticalAlignment="Top" Width="75" Click="btnNext_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryViewSource}">
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="240,0,9.6,182.8" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="310,138,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <Button x:Name="btnNewInv" Click="btnNewInventory_Click" Content="New" HorizontalAlignment="Left" Margin="32,24,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnEditInv" Click="btnEditInventory_Click" Content="Edit" HorizontalAlignment="Left" Margin="32,63,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnDeleteInv" Click="btnDeleteInventory_Click" Content="Delete" HorizontalAlignment="Left" Margin="32,91,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnSaveInv" Click="btnSaveInventory_Click" Content="Save" HorizontalAlignment="Left" Margin="32,219,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnCancelInv" Click="btnCancelInventory_Click" Content="Cancel" HorizontalAlignment="Left" Margin="32,243,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnPrevInv" Click="btnPreviousInventory_Click" Content="Previous" HorizontalAlignment="Left" Margin="223,166,0,0" VerticalAlignment="Top" Width="75"/>
                    <Button x:Name="btnNextInv" Click="btnNextInventory_Click" Content="Next" HorizontalAlignment="Left" Margin="548,166,0,0" VerticalAlignment="Top" Width="75"/>
                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerOrdersViewSource}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="38*"/>
                        <RowDefinition Height="251*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="170*"/>
                        <ColumnDefinition Width="141*"/>
                        <ColumnDefinition Width="338*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Margin="97.6,10,0,0" VerticalAlignment="Top" Width="120" Grid.ColumnSpan="2" Grid.Column="1">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbInventory" Grid.Column="2" HorizontalAlignment="Left" Margin="151.8,10,0,0" VerticalAlignment="Top" Width="120">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Color"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False"
EnableRowVirtualization="True" ItemsSource="{Binding}"
RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True" Grid.ColumnSpan="2" Grid.Column="1" Margin="97.6,31.4,35.6,86.8" Grid.Row="1">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}"
Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}"
Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="MakeColumn" Binding="{Binding Make}"
Header="Make" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ColorColumn" Binding="{Binding Color}"
Header="Color" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="btnNewOrders" Click="btnNewOrder_Click" Content="New" HorizontalAlignment="Left" Margin="32,23,0,0" VerticalAlignment="Top" Width="75" Grid.RowSpan="2"/>
                    <Button x:Name="btnEditOrders" Click="btnEditOrder_Click" Content="Edit" HorizontalAlignment="Left" Margin="32,23.4,0,0" VerticalAlignment="Top" Width="75" Grid.Row="1"/>
                    <Button x:Name="btnDeleteOrders" Click="btnDeleteOrder_Click" Content="Delete" HorizontalAlignment="Left" Margin="32,73.4,0,0" VerticalAlignment="Top" Width="75" Grid.Row="1"/>
                    <Button x:Name="btnSaveOrders" Click="btnSaveOrder_Click" Content="Save" HorizontalAlignment="Left" Margin="32,145.4,0,0" VerticalAlignment="Top" Width="75" Grid.Row="1"/>
                    <Button x:Name="btnCancelOrders" Content="Cancel" HorizontalAlignment="Left" Margin="32,193.4,0,0" VerticalAlignment="Top" Width="75" Grid.Row="1"/>
                    <Button x:Name="btnPrevOrders" Click="btnPreviousOrder_Click" Content="Previous" HorizontalAlignment="Left" Margin="97.6,193.4,0,0" VerticalAlignment="Top" Width="75" Grid.ColumnSpan="2" Grid.Row="1" Grid.Column="1"/>
                    <Button x:Name="btnNextOrders" Click="btnNextOrder_Click" Content="Next" HorizontalAlignment="Left" Margin="227.8,193.4,0,0" VerticalAlignment="Top" Width="75" Grid.Column="2" Grid.Row="1"/>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
